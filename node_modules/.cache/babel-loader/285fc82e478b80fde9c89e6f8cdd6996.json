{"ast":null,"code":"var _jsxFileName = \"C:\\\\movie-app\\\\src\\\\MovieComponent\\\\MovieList.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from \"material-table\";\nimport * as MoviesApi from \"../crud/MoviesCrud\";\nimport { forwardRef } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Portlet, PortletBody, PortletHeader, PortletHeaderToolbar } from \"../content/Portlet\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  }\n}));\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: null\n    };\n  }\n\n  componentDidMount() {\n    MoviesApi.getMoviesList().then(data => {\n      this.setState({ ...this.state,\n        users: data.data\n      });\n      console.log(this.state);\n    }).catch(error => {\n      console.log(\"Error fetching users\", error);\n    });\n  }\n\n  render() {\n    const classes = useStyles();\n    const tableIcons = {\n      Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 41\n        }\n      }))),\n      Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 43\n        }\n      }))),\n      Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 43\n        }\n      }))),\n      Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 44\n        }\n      }))),\n      DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }\n      }))),\n      Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 42\n        }\n      }))),\n      Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 44\n        }\n      }))),\n      Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 44\n        }\n      }))),\n      FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 47\n        }\n      }))),\n      LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 46\n        }\n      }))),\n      NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 46\n        }\n      }))),\n      PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 50\n        }\n      }))),\n      ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 49\n        }\n      }))),\n      Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 44\n        }\n      }))),\n      SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 47\n        }\n      }))),\n      ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 53\n        }\n      }))),\n      ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 48\n        }\n      })))\n    };\n    const {\n      users\n    } = this.state;\n\n    if (!users) {\n      return null;\n    }\n\n    setTimeout(() => {\n      console.log('This will run after 1 second!');\n    }, 1000);\n    console.log(users);\n    return /*#__PURE__*/React.createElement(Portlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PortletBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      icons: tableIcons,\n      title: \"\",\n      columns: [{\n        title: \"language\",\n        field: \"language\"\n      }, {\n        title: \"location\",\n        field: \"location\"\n      }, {\n        title: \"plot\",\n        field: \"plot\"\n      }, {\n        title: 'poster',\n        render: rowData => /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.root,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 50\n          }\n        }, \"  \", /*#__PURE__*/React.createElement(Avatar, {\n          alt: \"Remy Sharp\",\n          src: rowData.poster,\n          className: classes.large,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 82\n          }\n        }))\n      }],\n      data: users,\n      options: {\n        sorting: true,\n        actionsColumnIndex: -1,\n        showTitle: false,\n        search: true,\n        searchFieldAlignment: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["C:/movie-app/src/MovieComponent/MovieList.js"],"names":["React","Component","MaterialTable","MoviesApi","forwardRef","Avatar","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","makeStyles","Portlet","PortletBody","PortletHeader","PortletHeaderToolbar","useStyles","theme","root","display","margin","spacing","small","width","height","large","MovieList","constructor","props","state","users","componentDidMount","getMoviesList","then","data","setState","console","log","catch","error","render","classes","tableIcons","Add","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","setTimeout","title","field","rowData","poster","sorting","actionsColumnIndex","showTitle","search","searchFieldAlignment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport * as MoviesApi from \"../crud/MoviesCrud\";\r\nimport { forwardRef } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Portlet,\r\n  PortletBody,\r\n  PortletHeader,\r\n  PortletHeaderToolbar\r\n} from \"../content/Portlet\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\n\r\nclass MovieList extends Component{\r\n    state = { users: null}\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        MoviesApi.getMoviesList().then((data) => {\r\n     \r\n         this.setState({ ...this.state, users: data.data})\r\n         console.log(this.state);\r\n        }).catch((error) => {\r\n            console.log(\"Error fetching users\", error);\r\n        });\r\n    }\r\n    render() {\r\n      const classes = useStyles();\r\n      const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n      };\r\n      \r\n      \r\n         const  {users}  = this.state;\r\n         if (!users) {\r\n            return null;\r\n        }\r\n         setTimeout(() => {\r\n          console.log('This will run after 1 second!')\r\n        }, 1000);\r\n         console.log(users);\r\n        return (\r\n \r\n              <Portlet>\r\n                <PortletBody>\r\n          <MaterialTable icons={tableIcons}\r\n                            title=\"\"\r\n                            columns={[\r\n                                {\r\n                                    title: \"language\",\r\n                                    field: \"language\",\r\n                                } ,\r\n                                {\r\n                                  title: \"location\",\r\n                                  field: \"location\",\r\n                              }  ,\r\n                              {\r\n                                title: \"plot\",\r\n                                field: \"plot\",\r\n                            } ,\r\n                            {\r\n                            \r\n                              title: 'poster',\r\n                              \r\n                              render: rowData =>(<div className={classes.root}>  <Avatar alt=\"Remy Sharp\" src={rowData.poster} className={classes.large} /></div>)\r\n                             \r\n                          },                                \r\n                           \r\n                            ]}\r\n                            data={users}\r\n                            options={{\r\n                                sorting: true,\r\n                                actionsColumnIndex: -1,\r\n                                showTitle: false,\r\n                                search: true,\r\n                                searchFieldAlignment: \"left\"\r\n                            }}\r\n                           \r\n                        />\r\n                        </PortletBody>\r\n                         </Portlet>\r\n            )\r\n}\r\n}\r\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}