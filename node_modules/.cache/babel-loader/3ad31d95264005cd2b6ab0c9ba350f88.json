{"ast":null,"code":"var _jsxFileName = \"C:\\\\movie-app\\\\src\\\\MovieComponent\\\\MovieDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport * as MoviesApi from \"../crud/MoviesCrud\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\nexport default function MovieDetails(props) {\n  const classes = useStyles();\n  const imdbID = props.location.state.imdbID;\n  const [state, setState] = useState({\n    MovieDetails: null\n  });\n  useEffect(() => {\n    console.log(imdbID);\n    MoviesApi.getMoviesDetail(imdbID).then(data => {\n      setState({ ...state,\n        MovieDetails: data.data\n      });\n    }).catch(error => {\n      console.log(\"Error fetching users\", error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }\n  });\n}","map":{"version":3,"sources":["C:/movie-app/src/MovieComponent/MovieDetails.js"],"names":["React","useEffect","useState","Avatar","AvatarGroup","Tooltip","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","MoviesApi","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","MovieDetails","props","classes","imdbID","location","state","setState","console","log","getMoviesDetail","then","data","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAO,KAAKC,SAAZ,MAA2B,oBAA3B;AAIA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,cAAc,EAAE,cAHZ;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,GAD+B;AAQrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,GADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GAR2B;AAYrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AAZ+B,CAAZ,CAAD,CAA5B;AAmBA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,QAAMmB,MAAM,GAAGF,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBF,MAApC;AAGA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC;AAChC4B,IAAAA,YAAY,EAAC;AADmB,GAAD,CAAlC;AAGA7B,EAAAA,SAAS,CAAC,MAAM;AACZoC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACApB,IAAAA,SAAS,CAAC0B,eAAV,CAA0BN,MAA1B,EAAkCO,IAAlC,CAAwCC,IAAD,IAAU;AAG7CL,MAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYL,QAAAA,YAAY,EAACW,IAAI,CAACA;AAA9B,OAAD,CAAR;AACA,KAJJ,EAIMC,KAJN,CAIaC,KAAD,IAAW;AAChBN,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCK,KAApC;AACH,KANJ;AAQH,GAVQ,EAUN,EAVM,CAAT;AAaF,sBAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHE;AAMD","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport * as MoviesApi from \"../crud/MoviesCrud\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      width: 500,\r\n      height: 450,\r\n    },\r\n    icon: {\r\n      color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n  }));\r\n\r\n\r\n  \r\nexport default function MovieDetails(props) {\r\n    const classes = useStyles();\r\n    const imdbID = props.location.state.imdbID;\r\n\r\n\r\n    const [state, setState] = useState({\r\n       MovieDetails:null\r\n    });\r\n    useEffect(() => {\r\n        console.log(imdbID)\r\n        MoviesApi.getMoviesDetail(imdbID).then((data) => {\r\n     \r\n          \r\n            setState({ ...state, MovieDetails:data.data });\r\n           }).catch((error) => {\r\n               console.log(\"Error fetching users\", error);\r\n           });\r\n\r\n    }, []);\r\n\r\n\r\n  return (\r\n  \r\n\r\n<div></div>\r\n    \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}