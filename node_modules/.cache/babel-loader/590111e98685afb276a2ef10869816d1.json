{"ast":null,"code":"var _jsxFileName = \"C:\\\\movie-app\\\\src\\\\MovieComponent\\\\MovieList.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport * as MoviesApi from \"../crud/MoviesCrud\";\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: null\n    };\n  }\n\n  componentDidMount() {\n    MoviesApi.getMoviesList().then(data => {\n      this.setState({ ...this.state,\n        users: data.data\n      });\n      console.log(this.state);\n    }).catch(error => {\n      console.log(\"Error fetching users\", error);\n    });\n  }\n\n  render() {\n    const {\n      users\n    } = this.state;\n\n    if (!users) {\n      return null;\n    }\n\n    setTimeout(() => {\n      console.log('This will run after 1 second!');\n    }, 1000);\n    console.log(users);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"\",\n      columns: [{\n        title: \"Language\",\n        field: \"Language\"\n      }],\n      data: users,\n      options: {\n        sorting: true,\n        actionsColumnIndex: -1,\n        showTitle: false,\n        search: true,\n        searchFieldAlignment: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["C:/movie-app/src/MovieComponent/MovieList.js"],"names":["React","Component","MaterialTable","MoviesApi","MovieList","constructor","props","state","users","componentDidMount","getMoviesList","then","data","setState","console","log","catch","error","render","setTimeout","maxWidth","title","field","sorting","actionsColumnIndex","showTitle","search","searchFieldAlignment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,KAAKC,SAAZ,MAA2B,oBAA3B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAiC;AAE7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SADnBC,KACmB,GADX;AAAEC,MAAAA,KAAK,EAAE;AAAT,KACW;AAGlB;;AAGDC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,SAAS,CAACO,aAAV,GAA0BC,IAA1B,CAAgCC,IAAD,IAAU;AAExC,WAAKC,QAAL,CAAc,EAAE,GAAG,KAAKN,KAAV;AAAiBC,QAAAA,KAAK,EAAEI,IAAI,CAACA;AAA7B,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,KAJD,EAIGS,KAJH,CAIUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCE,KAApC;AACH,KAND;AAOH;;AACDC,EAAAA,MAAM,GAAG;AACJ,UAAO;AAACV,MAAAA;AAAD,QAAW,KAAKD,KAAvB;;AACA,QAAI,CAACC,KAAL,EAAY;AACX,aAAO,IAAP;AACH;;AACEW,IAAAA,UAAU,CAAC,MAAM;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,KAFU,EAER,IAFQ,CAAV;AAGAD,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEY,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,aAAD;AACkB,MAAA,KAAK,EAAC,EADxB;AAEkB,MAAA,OAAO,EAAE,CACL;AACIC,QAAAA,KAAK,EAAE,UADX;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADK,CAF3B;AASkB,MAAA,IAAI,EAAEd,KATxB;AAUkB,MAAA,OAAO,EAAE;AACLe,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,kBAAkB,EAAE,CAAC,CAFhB;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,MAAM,EAAE,IAJH;AAKLC,QAAAA,oBAAoB,EAAE;AALjB,OAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAwBP;;AAlDgC;;AAoDjC,eAAevB,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport * as MoviesApi from \"../crud/MoviesCrud\";\r\n\r\nclass MovieList extends Component{\r\n    state = { users: null}\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        MoviesApi.getMoviesList().then((data) => {\r\n     \r\n         this.setState({ ...this.state, users: data.data})\r\n         console.log(this.state);\r\n        }).catch((error) => {\r\n            console.log(\"Error fetching users\", error);\r\n        });\r\n    }\r\n    render() {\r\n         const  {users}  = this.state;\r\n         if (!users) {\r\n          return null;\r\n      }\r\n         setTimeout(() => {\r\n          console.log('This will run after 1 second!')\r\n        }, 1000);\r\n         console.log(users);\r\n        return (\r\n          <div style={{ maxWidth: \"100%\" }}>\r\n             \r\n          <MaterialTable\r\n                            title=\"\"\r\n                            columns={[\r\n                                {\r\n                                    title: \"Language\",\r\n                                    field: \"Language\",\r\n                                }                                \r\n                           \r\n                            ]}\r\n                            data={users}\r\n                            options={{\r\n                                sorting: true,\r\n                                actionsColumnIndex: -1,\r\n                                showTitle: false,\r\n                                search: true,\r\n                                searchFieldAlignment: \"left\"\r\n                            }}\r\n                           \r\n                        />\r\n                           </div>\r\n            )\r\n}\r\n}\r\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}