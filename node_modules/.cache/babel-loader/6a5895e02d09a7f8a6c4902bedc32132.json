{"ast":null,"code":"var _jsxFileName = \"C:\\\\movie-app\\\\src\\\\MovieComponent\\\\MovieList.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { forwardRef } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Select, MenuItem, FormControl, FormHelperText } from '@material-ui/core';\nimport { Button } from \"@material-ui/core\";\nimport * as MoviesApi from \"../crud/MoviesCrud\";\nimport { Portlet, PortletBody, PortletHeader, PortletHeaderToolbar } from \"../content/Portlet\";\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: null\n    };\n  }\n\n  componentDidMount() {\n    MoviesApi.getMoviesList().then(data => {\n      this.setState({ ...this.state,\n        users: data.data\n      });\n      console.log(this.state);\n    }).catch(error => {\n      console.log(\"Error fetching users\", error);\n    });\n  }\n\n  render() {\n    const tableIcons = {\n      Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 41\n        }\n      }))),\n      Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 43\n        }\n      }))),\n      Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 43\n        }\n      }))),\n      Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 44\n        }\n      }))),\n      DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }))),\n      Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 42\n        }\n      }))),\n      Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 44\n        }\n      }))),\n      Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 44\n        }\n      }))),\n      FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 47\n        }\n      }))),\n      LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 46\n        }\n      }))),\n      NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 46\n        }\n      }))),\n      PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }))),\n      ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 49\n        }\n      }))),\n      Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 44\n        }\n      }))),\n      SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 47\n        }\n      }))),\n      ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 53\n        }\n      }))),\n      ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 48\n        }\n      })))\n    };\n    const {\n      users\n    } = this.state;\n\n    if (!users) {\n      return null;\n    }\n\n    setTimeout(() => {\n      console.log('This will run after 1 second!');\n    }, 1000);\n    console.log(users);\n    return /*#__PURE__*/React.createElement(Portlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PortletBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      icons: tableIcons,\n      title: \"\",\n      columns: [{\n        title: \"language\",\n        field: \"language\"\n      }],\n      data: users,\n      options: {\n        sorting: true,\n        actionsColumnIndex: -1,\n        showTitle: false,\n        search: true,\n        searchFieldAlignment: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["C:/movie-app/src/MovieComponent/MovieList.js"],"names":["React","Component","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","TextField","InputLabel","forwardRef","makeStyles","Select","MenuItem","FormControl","FormHelperText","Button","MoviesApi","Portlet","PortletBody","PortletHeader","PortletHeaderToolbar","MovieList","constructor","props","state","users","componentDidMount","getMoviesList","then","data","setState","console","log","catch","error","render","tableIcons","Add","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","setTimeout","title","field","sorting","actionsColumnIndex","showTitle","search","searchFieldAlignment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { forwardRef } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Select, MenuItem,FormControl,FormHelperText\r\n  } from '@material-ui/core';\r\n\r\n\r\nimport {\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport * as MoviesApi from \"../crud/MoviesCrud\";\r\nimport {\r\n  Portlet,\r\n  PortletBody,\r\n  PortletHeader,\r\n  PortletHeaderToolbar\r\n} from \"../content/Portlet\";\r\nclass MovieList extends Component{\r\n    state = { users: null}\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        MoviesApi.getMoviesList().then((data) => {\r\n     \r\n         this.setState({ ...this.state, users: data.data})\r\n         console.log(this.state);\r\n        }).catch((error) => {\r\n            console.log(\"Error fetching users\", error);\r\n        });\r\n    }\r\n    render() {\r\n\r\n      const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => (\r\n          <ChevronRight {...props} ref={ref} />\r\n        )),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => (\r\n          <ChevronLeft {...props} ref={ref} />\r\n        )),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n      };\r\n\r\n         const  {users}  = this.state;\r\n         if (!users) {\r\n            return null;\r\n        }\r\n         setTimeout(() => {\r\n          console.log('This will run after 1 second!')\r\n        }, 1000);\r\n         console.log(users);\r\n        return (\r\n \r\n              <Portlet>\r\n                <PortletBody>\r\n          <MaterialTable icons={tableIcons}\r\n                            title=\"\"\r\n                            columns={[\r\n                                {\r\n                                    title: \"language\",\r\n                                    field: \"language\",\r\n                                }                                \r\n                           \r\n                            ]}\r\n                            data={users}\r\n                            options={{\r\n                                sorting: true,\r\n                                actionsColumnIndex: -1,\r\n                                showTitle: false,\r\n                                search: true,\r\n                                searchFieldAlignment: \"left\"\r\n                            }}\r\n                           \r\n                        />\r\n                        </PortletBody>\r\n                         </Portlet>\r\n            )\r\n}\r\n}\r\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}