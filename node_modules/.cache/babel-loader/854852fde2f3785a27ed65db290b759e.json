{"ast":null,"code":"var _jsxFileName = \"C:\\\\movie-app\\\\src\\\\MovieComponent\\\\MovieList.js\";\nimport React, { Component } from 'react';\nimport MaterialTable from \"material-table\";\nimport * as MoviesApi from \"../crud/MoviesCrud\";\nimport { forwardRef } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Portlet, PortletBody, PortletHeader, PortletHeaderToolbar } from \"../content/Portlet\";\nimport { Select, MenuItem } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3)\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  }\n}));\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: null\n    };\n  }\n\n  MovieDetail(event) {\n    console.log(event);\n  }\n\n  componentDidMount() {\n    MoviesApi.getMoviesList().then(data => {\n      this.setState({ ...this.state,\n        users: data.data\n      });\n      console.log(this.state);\n    }).catch(error => {\n      console.log(\"Error fetching users\", error);\n    });\n  }\n\n  render() {\n    const tableIcons = {\n      Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }\n      }))),\n      Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 43\n        }\n      }))),\n      Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 43\n        }\n      }))),\n      Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }\n      }))),\n      DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 49\n        }\n      }))),\n      Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 42\n        }\n      }))),\n      Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 44\n        }\n      }))),\n      Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 44\n        }\n      }))),\n      FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 47\n        }\n      }))),\n      LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 46\n        }\n      }))),\n      NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 46\n        }\n      }))),\n      PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 50\n        }\n      }))),\n      ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 49\n        }\n      }))),\n      Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 44\n        }\n      }))),\n      SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 47\n        }\n      }))),\n      ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 53\n        }\n      }))),\n      ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n        ref: ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 48\n        }\n      })))\n    };\n    const {\n      users\n    } = this.state;\n\n    if (!users) {\n      return null;\n    }\n\n    setTimeout(() => {\n      console.log('This will run after 1 second!');\n    }, 1000);\n    console.log(users);\n    return /*#__PURE__*/React.createElement(Portlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PortletBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      icons: tableIcons,\n      title: \"\",\n      columns: [{\n        title: \"language\",\n        //field: \"language\",\n        render: rowData => /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 54\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          onClick: this.MovieDetail(rowData),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 40\n          }\n        }, rowData.language))\n      }, {\n        title: \"location\",\n        field: \"location\"\n      }, {\n        title: \"plot\",\n        field: \"plot\"\n      }, {\n        title: 'poster',\n        sortable: false,\n        render: rowData => /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 50\n          }\n        }, \"  \", /*#__PURE__*/React.createElement(Avatar, {\n          alt: \"Remy Sharp\",\n          src: rowData.poster,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 57\n          }\n        }))\n      }, {\n        title: 'Sound Effects',\n        render: rowData => rowData.soundEffects.map((dt, i) => {\n          return /*#__PURE__*/React.createElement(MenuItem, {\n            key: i,\n            value: dt,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 40\n            }\n          }, dt);\n        })\n      }],\n      data: users,\n      options: {\n        sorting: true,\n        actionsColumnIndex: -1,\n        showTitle: false,\n        search: true,\n        searchFieldAlignment: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["C:/movie-app/src/MovieComponent/MovieList.js"],"names":["React","Component","MaterialTable","MoviesApi","forwardRef","Link","Avatar","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","makeStyles","Portlet","PortletBody","PortletHeader","PortletHeaderToolbar","Select","MenuItem","useStyles","theme","root","display","margin","spacing","small","width","height","large","MovieList","constructor","props","state","users","MovieDetail","event","console","log","componentDidMount","getMoviesList","then","data","setState","catch","error","render","tableIcons","Add","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","setTimeout","title","rowData","language","field","sortable","poster","soundEffects","map","dt","i","sorting","actionsColumnIndex","showTitle","search","searchFieldAlignment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport * as MoviesApi from \"../crud/MoviesCrud\";\r\nimport { forwardRef } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Portlet,\r\n  PortletBody,\r\n  PortletHeader,\r\n  PortletHeaderToolbar\r\n} from \"../content/Portlet\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n}));\r\n\r\n\r\nclass MovieList extends Component{\r\n    state = { users: null}\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    }\r\n    MovieDetail(event)\r\n    {\r\n      console.log(event);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        MoviesApi.getMoviesList().then((data) => {\r\n     \r\n         this.setState({ ...this.state, users: data.data})\r\n         console.log(this.state);\r\n        }).catch((error) => {\r\n            console.log(\"Error fetching users\", error);\r\n        });\r\n    }\r\n    render() {\r\n      \r\n      const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n      };\r\n      \r\n      \r\n         const  {users}  = this.state;\r\n         if (!users) {\r\n            return null;\r\n        }\r\n         setTimeout(() => {\r\n          console.log('This will run after 1 second!')\r\n        }, 1000);\r\n         console.log(users);\r\n        return (\r\n \r\n              <Portlet>\r\n                <PortletBody>\r\n          <MaterialTable icons={tableIcons}\r\n                            title=\"\"\r\n                            columns={[\r\n                              {\r\n                                    title: \"language\",\r\n                                    //field: \"language\",\r\n                                    render:rowData=>(<div>\r\n                                       <a href=\"#\" onClick={this.MovieDetail(rowData)}>{rowData.language}</a>\r\n                                       </div>)\r\n                                } ,\r\n                                {\r\n                                  title: \"location\",\r\n                                  field: \"location\",\r\n                              }  ,\r\n                              {\r\n                                title: \"plot\",\r\n                                field: \"plot\"\r\n                                \r\n                            } ,\r\n                            {\r\n                            \r\n                              title: 'poster',\r\n                              sortable: false,\r\n                              render: rowData =>(<div>  <Avatar alt=\"Remy Sharp\" src={rowData.poster} /></div>)\r\n                             },                                \r\n                            {\r\n                              title:'Sound Effects',\r\n                              render:rowData=>( \r\n                                    rowData.soundEffects.map((dt, i) => {                              \r\n                               return (<MenuItem key={i} value={dt}>{dt}</MenuItem>)                                 \r\n                               })\r\n                            )}\r\n                            ]}\r\n                            data={users}\r\n                            options={{\r\n                                sorting: true,\r\n                                actionsColumnIndex: -1,\r\n                                showTitle: false,\r\n                                search: true,\r\n                                searchFieldAlignment: \"left\"\r\n                            }}\r\n                           \r\n                        />\r\n                        </PortletBody>\r\n                         </Portlet>\r\n            )\r\n}\r\n}\r\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}